{"version":3,"sources":["ListOfGoods.js","App.js","index.js"],"names":["ListOfGoods","state","maxLength","Infinity","goods","props","reverseArr","setState","prevState","reverse","filter","good","length","alphabetSort","sort","lengthSort","a","b","resetOrder","selectChange","event","target","value","this","map","key","type","onClick","onInput","React","Component","goodsFromServer","App","className","ReactDOM","render","document","getElementById"],"mappings":"4OA0FeA,E,4MArFbC,MAAQ,CACNC,UAAWC,IACXC,MAAM,YAAK,EAAKC,MAAMD,Q,EAGxBE,WAAa,WACX,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAOI,EAAUJ,MACdK,UACAC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,QAAUJ,EAAUN,kB,EAIhDW,aAAe,WACb,EAAKN,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAOI,EAAUJ,MACdU,OACAJ,QAAO,SAAAC,GAAI,OAAKA,EAAKC,QAAUJ,EAAUN,kB,EAIhDa,WAAa,WACX,EAAKR,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAOI,EAAUJ,MACdU,MAAK,SAACE,EAAGC,GAAJ,OAAWD,EAAEJ,OAASK,EAAEL,UAC7BF,QAAO,SAAAC,GAAI,OAAKA,EAAKC,QAAUJ,EAAUN,kB,EAIhDgB,WAAa,WACX,EAAKX,SAAS,CACZH,MAAM,YAAK,EAAKC,MAAMD,OACtBF,UAAWC,O,EAIfgB,aAAe,SAACC,GACd,EAAKb,SAAS,CACZL,UAAWkB,EAAMC,OAAOC,MACxBlB,MAAO,YAAI,EAAKC,MAAMD,OACnBM,QAAO,SAAAC,GAAI,OAAKA,EAAKC,QAAUQ,EAAMC,OAAOC,Y,uDAKjD,OACE,oCACE,4BACGC,KAAKtB,MAAMG,MAAMoB,KAAI,SAAAb,GAAI,OACxB,wBAAIc,IAAKd,GAAOA,OAGpB,4BAAQe,KAAK,SAASC,QAASJ,KAAKjB,YAApC,WAGA,4BAAQoB,KAAK,SAASC,QAASJ,KAAKV,cAApC,uBAGA,4BAAQa,KAAK,SAASC,QAASJ,KAAKL,YAApC,SAGA,4BAAQQ,KAAK,SAASC,QAASJ,KAAKR,YAApC,kBAGA,4BAAQa,QAASL,KAAKJ,cACpB,4BAAQG,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,IAAf,Y,GA3EgBO,IAAMC,WCA1BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWaC,EARH,kBACV,yBAAKC,UAAU,OACb,qCACCF,EAAgBnB,OACjB,kBAAC,EAAD,CAAaR,MAAO2B,MCjBxBG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.70682959.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ListOfGoods extends React.Component {\n  state = {\n    maxLength: Infinity,\n    goods: [...this.props.goods],\n  }\n\n  reverseArr = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods\n        .reverse()\n        .filter(good => (good.length <= prevState.maxLength)),\n    }));\n  }\n\n  alphabetSort = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods\n        .sort()\n        .filter(good => (good.length <= prevState.maxLength)),\n    }));\n  }\n\n  lengthSort = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods\n        .sort((a, b) => (a.length - b.length))\n        .filter(good => (good.length <= prevState.maxLength)),\n    }));\n  }\n\n  resetOrder = () => {\n    this.setState({\n      goods: [...this.props.goods],\n      maxLength: Infinity,\n    });\n  }\n\n  selectChange = (event) => {\n    this.setState({\n      maxLength: event.target.value,\n      goods: [...this.props.goods]\n        .filter(good => (good.length <= event.target.value)),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <ul>\n          {this.state.goods.map(good => (\n            <li key={good}>{good}</li>\n          ))}\n        </ul>\n        <button type=\"button\" onClick={this.reverseArr}>\n          Reverse\n        </button>\n        <button type=\"button\" onClick={this.alphabetSort}>\n          Sort alphabetically\n        </button>\n        <button type=\"button\" onClick={this.resetOrder}>\n          Reset\n        </button>\n        <button type=\"button\" onClick={this.lengthSort}>\n          Sort by length\n        </button>\n        <select onInput={this.selectChange}>\n          <option value={1}>1</option>\n          <option value={2}>2</option>\n          <option value={3}>3</option>\n          <option value={4}>4</option>\n          <option value={5}>5</option>\n          <option value={6}>6</option>\n          <option value={7}>7</option>\n          <option value={8}>8</option>\n          <option value={9}>9</option>\n          <option value={10}>10</option>\n        </select>\n      </>\n    );\n  }\n}\n\nListOfGoods.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default ListOfGoods;\n","import React from 'react';\nimport './App.css';\nimport ListOfGoods from './ListOfGoods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Goods</h1>\n    {goodsFromServer.length}\n    <ListOfGoods goods={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}